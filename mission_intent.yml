goal: "Establish a working PettingZoo setup with research parity settings for simple_tag (continuous=True, max_cycles=25, n_predators=3, n_preys=1, local_ratio=0.5 from Lowe et al. 2017); implement baselines (random vs random, random vs heuristic) with <20% capture rate; produce JSON outputs for independent script verification to reduce hallucinations; diagnose and resolve recent error.; fix TypeError in simple_tag_v3 by using continuous_actions=True; implement baselines with JSON logging for verification.; updated to 3 predators vs 1 prey confirmed from literature (Lowe 2017: 3 adversaries, 1 good, max_cycles=25)."

constraints: Confine all operations to /home/tommytai3/HiveFleetObsidian; backup hfo_petting_zoo/ to hfo_petting_zoo_backup/ before deletion; use isolated venv to avoid system-wide changes; source PettingZoo from official PyPI or GitHub for clean install (delete local copy if corrupted); match exact params from cited research for reproducibility (cite in comments); Python 3.8+; no core library modifications.

success_criteria:
  - Venv clean, PettingZoo[all] installed, simple_tag_v3 imports and runs 100 episodes without errors.
  - Baselines generate JSON files (e.g., random_vs_random.json) with episode data (rewards, captures, params) verifiable independently, matching research (<20% capture).
  - Error diagnosed and fixed, with log in JSON.
  - Baselines run 100 episodes, produce JSON with <20% capture rate, verifiable independently.
  - Baselines re-run with 3 predators vs 1 prey, 100 episodes, verify <20% capture in JSON.

safety:
  tripwires:
    - Any pip install or venv creation fails (e.g., dependency conflicts, permission errors) - abort immediately.
    - Install errors (e.g., pip failures) trigger diagnostic subtask before retry.
    - Baseline runs crash or produce NaN/infinite metrics - rollback to backup.
    - Capture rates deviate >10% from expected research baselines without explanation - halt and recheck params.
    - Unresolved errors in install or run (e.g., import failures post-pip) trigger immediate diagnostic subtask and potential rollback.
    - Reported errors trigger immediate diagnostic run in venv before proceeding.
    - Any runtime error in baselines triggers JSON error log and halt.
  canary_plan: Test all changes (install, baselines) exclusively in new ./pettingzoo_env/ venv; run single episode first before full 100; log outputs to ./pettingzoo_logs/ without affecting existing project files.
  revert_plan: Deactivate venv (deactivate); rm -rf ./pettingzoo_env/; cp -r hfo_petting_zoo_backup/ hfo_petting_zoo/; restore any modified scripts from git or backup if applicable (assume no git, use manual copy).

created_at: '2025-10-28T15:00:00Z-v10'